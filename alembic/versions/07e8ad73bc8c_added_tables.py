"""Added tables

Revision ID: 07e8ad73bc8c
Revises:
Create Date: 2024-12-12 17:48:29.019581

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '07e8ad73bc8c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('building',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Идентификатор'),
    sa.Column('address', sa.String(length=200), nullable=False, comment='Адрес дома'),
    sa.Column('floors_number', sa.Integer(), nullable=False, comment='Количество этажей'),
    sa.Column('lift_number', sa.Integer(), nullable=False, comment='Количество лифтов'),
    sa.Column('project_name', sa.String(length=100), nullable=False, comment='Название ЖК'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address'),
    schema='payment_management'
    )
    with op.batch_alter_table('building', schema='payment_management') as batch_op:
        batch_op.create_index(batch_op.f('ix_payment_management_building_id'), ['id'], unique=True)

    op.create_table('owner',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Идентификатор'),
    sa.Column('fullname', sa.String(length=100), nullable=False, comment='ФИО владельца'),
    sa.Column('passport_series', sa.String(length=4), nullable=False, comment='Серия паспорта'),
    sa.Column('passport_values', sa.String(length=6), nullable=False, comment='Номер паспорта'),
    sa.Column('phone', sa.String(length=11), nullable=False, comment='Сотовый телефон'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone'),
    schema='payment_management'
    )
    with op.batch_alter_table('owner', schema='payment_management') as batch_op:
        batch_op.create_index(batch_op.f('ix_payment_management_owner_id'), ['id'], unique=True)

    op.create_table('apartment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Идентификатор'),
    sa.Column('id_building', sa.Integer(), nullable=False, comment='Идентификатор дома'),
    sa.Column('id_owner', sa.Integer(), nullable=True, comment='Идентификатор владельца'),
    sa.Column('utility_account', sa.String(length=100), nullable=False, comment='Лицевой счет'),
    sa.Column('apartment_number', sa.Integer(), nullable=False, comment='Номер квартиры'),
    sa.Column('floor', sa.Integer(), nullable=False, comment='Этаж'),
    sa.ForeignKeyConstraint(['id_building'], ['payment_management.building.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_owner'], ['payment_management.owner.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id_building', 'utility_account', name='unique_id_building_utility_account'),
    schema='payment_management'
    )
    with op.batch_alter_table('apartment', schema='payment_management') as batch_op:
        batch_op.create_index(batch_op.f('ix_payment_management_apartment_id'), ['id'], unique=True)

    op.create_table('bill',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Идентификатор'),
    sa.Column('id_building', sa.Integer(), nullable=False, comment='Идентификатор дома'),
    sa.Column('utility_account', sa.String(length=100), nullable=False, comment='Лицевой счет'),
    sa.Column('bill_period', sa.String(length=100), nullable=False, comment='Период начисления'),
    sa.Column('bill_size', sa.Float(), nullable=False, comment='Сумма начисления'),
    sa.Column('is_paid', sa.Boolean(), nullable=False, comment='Флаг факта оплаты'),
    sa.ForeignKeyConstraint(['id_building'], ['payment_management.building.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id_building', 'utility_account', name='bill_unique_id_building_utility_account'),
    schema='payment_management'
    )
    with op.batch_alter_table('bill', schema='payment_management') as batch_op:
        batch_op.create_index(batch_op.f('ix_payment_management_bill_id'), ['id'], unique=True)

    op.create_table('apartment_info',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='Идентификатор'),
    sa.Column('id_apartment', sa.Integer(), nullable=False, comment='Идентификатор квартиры'),
    sa.Column('room_number', sa.Integer(), nullable=False, comment='Количество комнат'),
    sa.Column('common_square', sa.Integer(), nullable=False, comment='Общая площадь квартиры'),
    sa.Column('kitchen_square', sa.Integer(), nullable=True, comment='Площадь кухни'),
    sa.Column('balcony', sa.Boolean(), nullable=True, comment='Наличие балкона'),
    sa.ForeignKeyConstraint(['id_apartment'], ['payment_management.apartment.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='payment_management'
    )
    with op.batch_alter_table('apartment_info', schema='payment_management') as batch_op:
        batch_op.create_index(batch_op.f('ix_payment_management_apartment_info_id'), ['id'], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('apartment_info', schema='payment_management') as batch_op:
        batch_op.drop_index(batch_op.f('ix_payment_management_apartment_info_id'))

    op.drop_table('apartment_info', schema='payment_management')
    with op.batch_alter_table('bill', schema='payment_management') as batch_op:
        batch_op.drop_index(batch_op.f('ix_payment_management_bill_id'))

    op.drop_table('bill', schema='payment_management')
    with op.batch_alter_table('apartment', schema='payment_management') as batch_op:
        batch_op.drop_index(batch_op.f('ix_payment_management_apartment_id'))

    op.drop_table('apartment', schema='payment_management')
    with op.batch_alter_table('owner', schema='payment_management') as batch_op:
        batch_op.drop_index(batch_op.f('ix_payment_management_owner_id'))

    op.drop_table('owner', schema='payment_management')
    with op.batch_alter_table('building', schema='payment_management') as batch_op:
        batch_op.drop_index(batch_op.f('ix_payment_management_building_id'))

    op.drop_table('building', schema='payment_management')
    # ### end Alembic commands ###
